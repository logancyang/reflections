How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    diff shows at which lines the differences are located.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Once a version is corrupted, we can retreat to an earlier version.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manually commit:
    	You can control at which point you save the version,
    	but it's more tedious than auto-save.
    Auto save:
    	More convenient, but you don't get to choose when to save a version.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because Git deals with files that are related to each other. Google Docs deals
    with single files that work alone.

How can you use the commands git log and git diff to view the history of files?

    git log --stat: see the commit id, author, date, message, # changes
    git diff (commit_id1) (commit_id2): see the difference, + and -

How might using version control make you more confident to make changes that
could break something?

    Because you can always retreat to an earlier correct version.

Now that you have your workspace set up, what do you want to try using Git for?

    Code Python.

How could having easy access to the entire history of a file make you a more efficient 
programmer in the long term?

	One can always track the changes, i.e. the flow of the thoughts.